name: Tests

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main, staging]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        env:
          NODE_ENV: test
          NODE_OPTIONS: --experimental-vm-modules
          DATABASE_URL: postgresql://test:test@localhost:5432/test_db
        run: |
          echo "Running tests..."
          if npm test; then
            echo "✅ All tests passed!"
            echo "TEST_STATUS=success" >> $GITHUB_ENV
          else
            echo "❌ Some tests failed!"
            echo "TEST_STATUS=failed" >> $GITHUB_ENV
            echo "::error title=Test Failure::Some tests have failed. Please check the test output above for details."
            exit 1
          fi

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-reports
          path: coverage/
          retention-days: 30
          if-no-files-found: warn

      - name: Generate test summary
        if: always()
        run: |
          echo "# 🧪 Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "$TEST_STATUS" == "success" ]; then
            echo "## ✅ All Tests Passed" >> $GITHUB_STEP_SUMMARY
            echo "Great job! All your tests are passing." >> $GITHUB_STEP_SUMMARY
          else
            echo "## ❌ Tests Failed" >> $GITHUB_STEP_SUMMARY
            echo "Some tests have failed. Please review the test output above." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Troubleshooting Tips:" >> $GITHUB_STEP_SUMMARY
            echo "1. Check the failed test details in the logs above" >> $GITHUB_STEP_SUMMARY
            echo "2. Run tests locally with \`npm test\`" >> $GITHUB_STEP_SUMMARY
            echo "3. Ensure all dependencies are properly installed" >> $GITHUB_STEP_SUMMARY
            echo "4. Verify environment variables are correctly set" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📊 Coverage Reports" >> $GITHUB_STEP_SUMMARY

          if [ -d "coverage" ] && [ "$(ls -A coverage)" ]; then
            echo "Coverage reports have been generated and uploaded as artifacts." >> $GITHUB_STEP_SUMMARY
            echo "You can download them from the workflow artifacts section." >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ No coverage reports were generated." >> $GITHUB_STEP_SUMMARY
            echo "Make sure your Jest configuration includes coverage settings." >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "*Workflow completed at $(date)*" >> $GITHUB_STEP_SUMMARY

      - name: Annotate test failures
        if: failure()
        run: |
          echo "::warning title=Test Environment::Tests are running with NODE_ENV=test and experimental VM modules enabled"
          echo "::error title=Action Required::Please fix the failing tests before merging this PR"
